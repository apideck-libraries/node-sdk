/* tslint:disable */
/* eslint-disable */
/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 8.85.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
/**
 *
 * @export
 * @interface WebhookSupport
 */
export interface WebhookSupport {
  /**
   * Mode of the webhook support.
   * @type {string}
   * @memberof WebhookSupport
   */
  mode?: WebhookSupportMode
  /**
   * Received events are scoped to consumer or across integration.
   * @type {string}
   * @memberof WebhookSupport
   */
  subscription_level?: WebhookSupportSubscriptionLevel
  /**
   * How the subscription is managed in the downstream.
   * @type {string}
   * @memberof WebhookSupport
   */
  managed_via?: WebhookSupportManagedVia
}

/**
 * @export
 * @enum {string}
 */
export enum WebhookSupportMode {
  native = 'native',
  virtual = 'virtual',
  none = 'none'
}
/**
 * @export
 * @enum {string}
 */
export enum WebhookSupportSubscriptionLevel {
  consumer = 'consumer',
  integration = 'integration'
}
/**
 * @export
 * @enum {string}
 */
export enum WebhookSupportManagedVia {
  manual = 'manual',
  api = 'api'
}

export function WebhookSupportFromJSON(json: any): WebhookSupport {
  return WebhookSupportFromJSONTyped(json, false)
}

export function WebhookSupportFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): WebhookSupport {
  if (json === undefined || json === null) {
    return json
  }
  return {
    mode: !exists(json, 'mode') ? undefined : json['mode'],
    subscription_level: !exists(json, 'subscription_level')
      ? undefined
      : json['subscription_level'],
    managed_via: !exists(json, 'managed_via') ? undefined : json['managed_via']
  }
}

export function WebhookSupportToJSON(value?: WebhookSupport | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    mode: value.mode,
    subscription_level: value.subscription_level,
    managed_via: value.managed_via
  }
}
