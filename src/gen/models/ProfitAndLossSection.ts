/* tslint:disable */
/* eslint-disable */
/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 10.11.5
 * Contact: support@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
import {
  ProfitAndLossRecords,
  ProfitAndLossRecordsFromJSON,
  ProfitAndLossRecordsToJSON
} from './ProfitAndLossRecords'
import {
  ProfitAndLossType,
  ProfitAndLossTypeFromJSON,
  ProfitAndLossTypeToJSON
} from './ProfitAndLossType'

/**
 *
 * @export
 * @interface ProfitAndLossSection
 */
export interface ProfitAndLossSection {
  /**
   * The total amount of the transaction
   * @type {number}
   * @memberof ProfitAndLossSection
   */
  total: number | null
  /**
   * A unique identifier for an object.
   * @type {string}
   * @memberof ProfitAndLossSection
   */
  readonly id?: string
  /**
   * The account code of the account
   * @type {string}
   * @memberof ProfitAndLossSection
   */
  readonly code?: string
  /**
   * The name of the account.
   * @type {string}
   * @memberof ProfitAndLossSection
   */
  readonly title?: string
  /**
   *
   * @type {ProfitAndLossType}
   * @memberof ProfitAndLossSection
   */
  type?: ProfitAndLossType | null
  /**
   *
   * @type {ProfitAndLossRecords}
   * @memberof ProfitAndLossSection
   */
  records?: ProfitAndLossRecords | null
}

export function ProfitAndLossSectionFromJSON(json: any): ProfitAndLossSection {
  return ProfitAndLossSectionFromJSONTyped(json, false)
}

export function ProfitAndLossSectionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ProfitAndLossSection {
  if (json === undefined || json === null) {
    return json
  }
  return {
    total: json['total'],
    id: !exists(json, 'id') ? undefined : json['id'],
    code: !exists(json, 'code') ? undefined : json['code'],
    title: !exists(json, 'title') ? undefined : json['title'],
    type: !exists(json, 'type') ? undefined : ProfitAndLossTypeFromJSON(json['type']),
    records: !exists(json, 'records') ? undefined : ProfitAndLossRecordsFromJSON(json['records'])
  }
}

export function ProfitAndLossSectionToJSON(value?: ProfitAndLossSection | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    total: value.total,
    type: ProfitAndLossTypeToJSON(value.type),
    records: ProfitAndLossRecordsToJSON(value.records)
  }
}
