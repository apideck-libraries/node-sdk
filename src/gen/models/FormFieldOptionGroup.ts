/* tslint:disable */
/* eslint-disable */
/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 10.12.4
 * Contact: support@apideck.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
import {
  SimpleFormFieldOption,
  SimpleFormFieldOptionFromJSON,
  SimpleFormFieldOptionToJSON
} from './SimpleFormFieldOption'

/**
 *
 * @export
 * @interface FormFieldOptionGroup
 */
export interface FormFieldOptionGroup {
  /**
   *
   * @type {string}
   * @memberof FormFieldOptionGroup
   */
  label: string
  /**
   *
   * @type {Array<SimpleFormFieldOption>}
   * @memberof FormFieldOptionGroup
   */
  options: Array<SimpleFormFieldOption>
  /**
   *
   * @type {string}
   * @memberof FormFieldOptionGroup
   */
  option_type: FormFieldOptionGroupOptionType
  /**
   *
   * @type {string}
   * @memberof FormFieldOptionGroup
   */
  id?: string
}

/**
 * @export
 * @enum {string}
 */
export enum FormFieldOptionGroupOptionType {
  group = 'group'
}

export function FormFieldOptionGroupFromJSON(json: any): FormFieldOptionGroup {
  return FormFieldOptionGroupFromJSONTyped(json, false)
}

export function FormFieldOptionGroupFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FormFieldOptionGroup {
  if (json === undefined || json === null) {
    return json
  }
  return {
    label: json['label'],
    options: (json['options'] as Array<any>).map(SimpleFormFieldOptionFromJSON),
    option_type: json['option_type'],
    id: !exists(json, 'id') ? undefined : json['id']
  }
}

export function FormFieldOptionGroupToJSON(value?: FormFieldOptionGroup | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    label: value.label,
    options: (value.options as Array<any>).map(SimpleFormFieldOptionToJSON),
    option_type: value.option_type,
    id: value.id
  }
}
