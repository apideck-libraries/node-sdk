/* tslint:disable */
/* eslint-disable */
/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 8.3.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
import {
  ConnectorOauthScopes,
  ConnectorOauthScopesFromJSON,
  ConnectorOauthScopesToJSON
} from './ConnectorOauthScopes'

/**
 *
 * @export
 * @interface ConnectorUnifiedApis
 */
export interface ConnectorUnifiedApis {
  /**
   * Name of Apideck Unified API
   * @type {string}
   * @memberof ConnectorUnifiedApis
   */
  id?: ConnectorUnifiedApisId
  /**
   *
   * @type {Array<ConnectorOauthScopes>}
   * @memberof ConnectorUnifiedApis
   */
  oauth_scopes?: Array<ConnectorOauthScopes>
}

/**
 * @export
 * @enum {string}
 */
export enum ConnectorUnifiedApisId {
  vault = 'vault',
  lead = 'lead',
  crm = 'crm',
  accounting = 'accounting',
  file_storage = 'file-storage',
  spreadsheet = 'spreadsheet',
  email = 'email',
  script = 'script',
  sms = 'sms',
  team_messaging = 'team-messaging',
  ecommerce = 'ecommerce',
  payroll = 'payroll',
  customer_support = 'customer-support',
  time_registration = 'time-registration',
  transactional_email = 'transactional-email',
  hcm = 'hcm',
  form = 'form',
  csp = 'csp',
  email_marketing = 'email-marketing',
  ats = 'ats',
  hris = 'hris'
}

export function ConnectorUnifiedApisFromJSON(json: any): ConnectorUnifiedApis {
  return ConnectorUnifiedApisFromJSONTyped(json, false)
}

export function ConnectorUnifiedApisFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ConnectorUnifiedApis {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    oauth_scopes: !exists(json, 'oauth_scopes')
      ? undefined
      : (json['oauth_scopes'] as Array<any>).map(ConnectorOauthScopesFromJSON)
  }
}

export function ConnectorUnifiedApisToJSON(value?: ConnectorUnifiedApis | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    oauth_scopes:
      value.oauth_scopes === undefined
        ? undefined
        : (value.oauth_scopes as Array<any>).map(ConnectorOauthScopesToJSON)
  }
}
