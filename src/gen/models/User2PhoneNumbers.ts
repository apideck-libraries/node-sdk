/* tslint:disable */
/* eslint-disable */
/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 8.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
/**
 *
 * @export
 * @interface User2PhoneNumbers
 */
export interface User2PhoneNumbers {
  /**
   *
   * @type {string}
   * @memberof User2PhoneNumbers
   */
  number: string
  /**
   *
   * @type {string}
   * @memberof User2PhoneNumbers
   */
  id?: string | null
  /**
   *
   * @type {string}
   * @memberof User2PhoneNumbers
   */
  country_code?: string | null
  /**
   *
   * @type {string}
   * @memberof User2PhoneNumbers
   */
  area_code?: string | null
  /**
   *
   * @type {string}
   * @memberof User2PhoneNumbers
   */
  type?: User2PhoneNumbersType
}

/**
 * @export
 * @enum {string}
 */
export enum User2PhoneNumbersType {
  primary = 'primary',
  secondary = 'secondary',
  home = 'home',
  office = 'office',
  mobile = 'mobile',
  assistant = 'assistant',
  fax = 'fax',
  direct_dial_in = 'direct-dial-in',
  other = 'other'
}

export function User2PhoneNumbersFromJSON(json: any): User2PhoneNumbers {
  return User2PhoneNumbersFromJSONTyped(json, false)
}

export function User2PhoneNumbersFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): User2PhoneNumbers {
  if (json === undefined || json === null) {
    return json
  }
  return {
    number: json['number'],
    id: !exists(json, 'id') ? undefined : json['id'],
    country_code: !exists(json, 'country_code') ? undefined : json['country_code'],
    area_code: !exists(json, 'area_code') ? undefined : json['area_code'],
    type: !exists(json, 'type') ? undefined : json['type']
  }
}

export function User2PhoneNumbersToJSON(value?: User2PhoneNumbers | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    number: value.number,
    id: value.id,
    country_code: value.country_code,
    area_code: value.area_code,
    type: value.type
  }
}
