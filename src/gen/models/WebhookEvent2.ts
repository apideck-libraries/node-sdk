/* tslint:disable */
/* eslint-disable */
/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 5.12.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
import { EventType2, EventType2FromJSON, EventType2ToJSON } from './EventType2'

/**
 *
 * @export
 * @interface WebhookEvent2
 */
export interface WebhookEvent2 {
  /**
   * Unique reference to this request event
   * @type {string}
   * @memberof WebhookEvent2
   */
  event_id?: string
  /**
   * Service provider identifier
   * @type {string}
   * @memberof WebhookEvent2
   */
  service_id?: string
  /**
   * The service provider's ID of the entity that triggered this event
   * @type {string}
   * @memberof WebhookEvent2
   */
  entity_id?: string
  /**
   * The type entity that triggered this event
   * @type {string}
   * @memberof WebhookEvent2
   */
  entity_type?: string
  /**
   * The current count this request event has been attempted
   * @type {number}
   * @memberof WebhookEvent2
   */
  execution_attempt?: number
  /**
   * ISO Datetime for when the original event occurred
   * @type {string}
   * @memberof WebhookEvent2
   */
  occured_at?: string
  /**
   *
   * @type {EventType2}
   * @memberof WebhookEvent2
   */
  event_type?: EventType2
}

export function WebhookEvent2FromJSON(json: any): WebhookEvent2 {
  return WebhookEvent2FromJSONTyped(json, false)
}

export function WebhookEvent2FromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookEvent2 {
  if (json === undefined || json === null) {
    return json
  }
  return {
    event_id: !exists(json, 'event_id') ? undefined : json['event_id'],
    service_id: !exists(json, 'service_id') ? undefined : json['service_id'],
    entity_id: !exists(json, 'entity_id') ? undefined : json['entity_id'],
    entity_type: !exists(json, 'entity_type') ? undefined : json['entity_type'],
    execution_attempt: !exists(json, 'execution_attempt') ? undefined : json['execution_attempt'],
    occured_at: !exists(json, 'occured_at') ? undefined : json['occured_at'],
    event_type: !exists(json, 'event_type') ? undefined : EventType2FromJSON(json['event_type'])
  }
}

export function WebhookEvent2ToJSON(value?: WebhookEvent2 | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    event_id: value.event_id,
    service_id: value.service_id,
    entity_id: value.entity_id,
    entity_type: value.entity_type,
    execution_attempt: value.execution_attempt,
    occured_at: value.occured_at,
    event_type: EventType2ToJSON(value.event_type)
  }
}
