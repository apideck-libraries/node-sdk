/* tslint:disable */
/* eslint-disable */
/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 9.7.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
import { Currency, CurrencyFromJSON, CurrencyToJSON } from './Currency'
import { PaymentUnit, PaymentUnitFromJSON, PaymentUnitToJSON } from './PaymentUnit'

/**
 *
 * @export
 * @interface Compensation
 */
export interface Compensation {
  /**
   * A unique identifier for an object.
   * @type {string}
   * @memberof Compensation
   */
  readonly id?: string
  /**
   * The ID of the job to which the compensation belongs.
   * @type {string}
   * @memberof Compensation
   */
  readonly job_id?: string
  /**
   * The amount paid per payment unit.
   * @type {number}
   * @memberof Compensation
   */
  rate?: number
  /**
   *
   * @type {PaymentUnit}
   * @memberof Compensation
   */
  payment_unit?: PaymentUnit
  /**
   *
   * @type {Currency}
   * @memberof Compensation
   */
  currency?: Currency | null
  /**
   * The FLSA status for this compensation.
   * @type {string}
   * @memberof Compensation
   */
  flsa_status?: CompensationFlsaStatus
  /**
   * The date on which a change to an employee's compensation takes effect.
   * @type {string}
   * @memberof Compensation
   */
  effective_date?: string
}

/**
 * @export
 * @enum {string}
 */
export enum CompensationFlsaStatus {
  exempt = 'exempt',
  salaried_nonexempt = 'salaried-nonexempt',
  nonexempt = 'nonexempt',
  owner = 'owner'
}

export function CompensationFromJSON(json: any): Compensation {
  return CompensationFromJSONTyped(json, false)
}

export function CompensationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Compensation {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    job_id: !exists(json, 'job_id') ? undefined : json['job_id'],
    rate: !exists(json, 'rate') ? undefined : json['rate'],
    payment_unit: !exists(json, 'payment_unit')
      ? undefined
      : PaymentUnitFromJSON(json['payment_unit']),
    currency: !exists(json, 'currency') ? undefined : CurrencyFromJSON(json['currency']),
    flsa_status: !exists(json, 'flsa_status') ? undefined : json['flsa_status'],
    effective_date: !exists(json, 'effective_date') ? undefined : json['effective_date']
  }
}

export function CompensationToJSON(value?: Compensation | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    rate: value.rate,
    payment_unit: PaymentUnitToJSON(value.payment_unit),
    currency: CurrencyToJSON(value.currency),
    flsa_status: value.flsa_status,
    effective_date: value.effective_date
  }
}
